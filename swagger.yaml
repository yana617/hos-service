openapi: 3.0.0
info:
  title: API
  version: 1.0.0
servers:
  - url: 'http://localhost:1082/'
    description: Development
  - url: 'https://hos-service.dogcatbmpz.by/'
    description: Production
tags:
  - name: Notices
    description: CRUD for notices
  - name: Claims
    description: CRUD for claims
paths:
  /notices:
    post:
      summary: Create new notice
      tags:
        - Notices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                authorized:
                  type: boolean
      responses:
        '201':
          description: Notice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Notice'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    get:
      summary: Get ID's of existing notices
      tags:
        - Notices
      responses:
        '200':
          description: Returns existing notices
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: string
  '/notices/{noticeId}':
    parameters:
      - name: noticeId
        in: path
        description: ID of notice
        required: true
        schema:
          type: string
    get:
      summary: Get existing notice by ID
      tags:
        - Notices
      responses:
        '200':
          description: Returns requested notice
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Notice'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Edit existing notice
      tags:
        - Notices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                authorized:
                  type: boolean
      responses:
        '200':
          description: Returns edited notice
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Notice'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing notice
      tags:
        - Notices
      responses:
        '200':
          description: Notice successfully deleted
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /claims:
    get:
      summary: Get claims
      tags:
        - Claims
      parameters:
        - name: from
          in: query
          description: date from which to return
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: date from which to return
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns claims filtered by from & to parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Claim'
        '400':
          description: Fails when from or to parameters are invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
    post:
      summary: Create new claim
      tags:
        - Claims
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                date:
                  type: string
                  format: date-time
                type:
                  type: string
                  enum:
                    - morning
                    - evening
                arrival_time:
                  type: string
                additional_people:
                  type: integer
                comment:
                  type: string
                questionable:
                  type: boolean
                guest:
                  type: object
                  properties:
                    name:
                      type: string
                    surname:
                      type: string
                    phone:
                      type: string
              required:
                - user_id
                - date
                - type
      responses:
        '200':
          description: Returns new claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Claim'
        '400':
          description: Fails with validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: 'Fails with not enough permissions, not yours'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/claims/{claimId}':
    parameters:
      - name: claimId
        in: path
        description: ID of claim
        required: true
        schema:
          type: string
    put:
      summary: Edit existing claim
      tags:
        - Claims
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arrival_time:
                  type: string
                additional_people:
                  type: integer
                comment:
                  type: string
                questionable:
                  type: boolean
      responses:
        '200':
          description: Returns edited claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Claim'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '403':
          description: Forbidden when updating not yours
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete existing claim
      tags:
        - Claims
      responses:
        '200':
          description: Returns deleted claim
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Claim'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{userId}/claims':
    get:
      summary: Get claims for one user
      tags:
        - Claims
      parameters:
        - name: userId
          in: path
          description: user id which claims to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns claims for one user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Claim'
        '401':
          description: Auth required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          default: false
        errors:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              msg:
                type: string
              param:
                type: string
              location:
                type: string
    Notice:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        authorized:
          type: boolean
    Claim:
      type: object
      properties:
        _id:
          type: string
        user_id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - morning
            - evening
        arrival_time:
          type: string
        additional_people:
          type: integer
        comment:
          type: string
        questionable:
          type: boolean
        guest_id:
          type: string
          format: uuid
